<#@ Assembly Name="System" #>
<#@ Assembly Name="System.Core" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.Interop.8.0" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="EnvDTE80" #>
<#@ assembly name="VSLangProj" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Microsoft.VisualStudio.Shell.Interop" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="EnvDTE80" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.IO" #><#+ 
    string GetRawStringVersion()
    {
        var hostServiceProvider = (IServiceProvider)this.Host;
        var dte = (DTE)hostServiceProvider.GetService(typeof(DTE));
        var solutionDir = Path.GetDirectoryName(dte.Solution.FullName);

        var versionFileContent = File.ReadAllText(Path.Combine(solutionDir, "KL2-Core", "Version.cs"));

        var match = Regex.Match(versionFileContent, @"(?<=\[assembly:\s?AssemblyVersion\(\s?"")[\d.]*", RegexOptions.Multiline);

        return match.Value;
    }

    Version GetVersion()
    {
        var stringVersion= GetRawStringVersion();
        return new Version(stringVersion);
    }
#>