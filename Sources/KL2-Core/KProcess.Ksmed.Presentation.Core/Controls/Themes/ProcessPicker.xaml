<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:k="http://schemas.kprocess.com/xaml/framework"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:models="clr-namespace:KProcess.Ksmed.Models;assembly=KProcess.Ksmed.Models"
    xmlns:local="clr-namespace:KProcess.Ksmed.Presentation.Core.Controls"
    xmlns:validations="clr-namespace:KProcess.Ksmed.Presentation.Core.Validations"
    xmlns:System="clr-namespace:System;assembly=mscorlib">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/KProcess.Ksmed.Presentation.Core;component/JetPack/Brushes.xaml" />
    <ResourceDictionary Source="/KProcess.Ksmed.Presentation.Core;component/JetPack/CoreStyles.xaml" />
    <ResourceDictionary Source="/KProcess.Ksmed.Presentation.Core;component/JetPack/SDKStyles.xaml" />
  </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:ProcessPicker}" BasedOn="{StaticResource listBoxStyleBase}" >
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="Background" Value="{x:Null}" />
    <Setter Property="IsEnabled" Value="{Binding IsNotReadOnly}" />
        <Setter Property="CreateProcessCommand" Value="{Binding AddProcessCommand}" />
    <Setter Property="SelectionMode" Value="Single" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Width="{Binding ViewportWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollViewer}}}"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Margin" Value="4,0" />

    <Setter Property="Template">
      <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ProcessPicker}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="OuterHighlight" BorderBrush="{StaticResource ControlOuterHighlightBrush}" BorderThickness="0,0,1,1" CornerRadius="3" Margin="0,0,-1,-1" />
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Margin="0">
                                <ScrollViewer x:Name="ScrollViewer" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="0" Padding="0" KeyboardNavigation.TabNavigation="{Binding (KeyboardNavigation.TabNavigation), RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ItemsPresenter Margin="0,0" x:Name="ItemsPresenter" HorizontalAlignment="Left" />
                                        <local:ProcessPickerItem x:Name="PART_NewProcess" Width="{Binding ActualWidth, ElementName=ItemsPresenter}" HorizontalAlignment="Left" 
                                                 IsNewProcess="True" Grid.Row="1" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                            <!-- Inner Shadow. -->
                            <Border BorderBrush="{StaticResource InnerShadowDarkBrush}" BorderThickness="1,1,0,0" CornerRadius="2" Margin="1" />
                            <Border BorderBrush="{StaticResource InnerShadowLightBrush}" BorderThickness="1,1,0,0" CornerRadius="1" Margin="2,2,1,1" />
                        </Grid>
                        <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ErrorBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                         Placement="Left" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                         Template="{StaticResource ValidationToolTipTemplate}" />
              </ToolTipService.ToolTip>
              <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ErrorBrush}" Margin="-1,3,0,0" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="CanCreate" Value="false">
                            <Setter TargetName="PART_NewProcess" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


    <Style TargetType="{x:Type local:ProcessPickerItem}" BasedOn="{StaticResource listBoxItemStyleBase}">
    <Setter Property="MinHeight" Value="31" />
        <Setter Property="Process" Value="{Binding .}" />
    <Setter Property="ToolTip" Value="{Binding DescriptionOrLabel}" />
    <Setter Property="IsEditable" Value="{Binding IsEditable, Mode=TwoWay}" />
    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
    <Setter Property="Label" Value="{Binding Label, Mode=TwoWay}" />

    <Setter Property="Template">
      <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ProcessPickerItem}">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverElement" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedElement" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverElement" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedElement" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverElement" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="LayoutStates">
                <VisualState x:Name="AfterLoaded" />
                <VisualState x:Name="BeforeLoaded" />
                <VisualState x:Name="BeforeUnloaded" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InvalidFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>True</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="MouseOverElement" IsHitTestVisible="False" Opacity="0" RadiusX="0" RadiusY="0" Fill="{StaticResource MouseOverSelectionBrush}" />
            <Rectangle x:Name="SelectedElement" IsHitTestVisible="False" Opacity="0" RadiusX="0" RadiusY="1" Fill="{StaticResource InputSelectionBrush}" />

            <Grid TextElement.Foreground="{StaticResource NormalFontBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <TextBox x:Name="PART_Quantity" Visibility="Collapsed" Margin="0,0,4,0" MinHeight="0">
                  <TextBox.Text>
                      <k:InstantValidatingBinding Path="Quantity" RelativeSource="{RelativeSource TemplatedParent}">
                          <k:InstantValidatingBinding.ValidationRules>
                              <validations:StringToIntValidationRule ErrorMessageKey="Common_Context_BindingValidationFailed"/>
                          </k:InstantValidatingBinding.ValidationRules>
                      </k:InstantValidatingBinding>
                  </TextBox.Text>
              </TextBox>
              <TextBlock x:Name="PART_Label" Text="{Binding Label, RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="CharacterEllipsis" Grid.Column="1" VerticalAlignment="Center" />
              <TextBox x:Name="PART_TextBox" Text="{k:InstantBinding Label, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" MaxLength="{x:Static models:Procedure.LabelMaxLength}" Grid.Column="1" VerticalAlignment="Center" />
            </Grid>

            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="2" Opacity="0" RadiusX="1" RadiusY="1" Stroke="{StaticResource FocusVisualBrush}" StrokeDashArray="2" StrokeThickness="{StaticResource FocusVisualStrokeThickness}" />
            <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ErrorBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Visibility="Collapsed">
              <ToolTipService.ToolTip>
                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                         Placement="Left" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                         Template="{StaticResource ValidationToolTipTemplate}" />
              </ToolTipService.ToolTip>
              <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ErrorBrush}" Margin="-1,3,0,0" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="CanCreate" Value="false">
              <Setter TargetName="PART_Quantity" Property="IsEnabled" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
            <Trigger Property="IsNewProcess" Value="true">
                <Setter Property="Process" Value="{x:Null}" />
        <Setter Property="ToolTip" Value="{x:Null}" />
        <Setter Property="IsEditable" Value="false" />
        <Setter Property="IsSelected" Value="False" />
        
        <Setter Property="Label" Value="{k:Localize View_AnalyzeAcquire_NewReferential}" />
        <Setter Property="Block.FontStyle" Value="Italic" />
        <Setter Property="Foreground" Value="White" />
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>