<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:k="http://schemas.kprocess.com/xaml/framework"
                    xmlns:local="clr-namespace:KProcess.Ksmed.Presentation.Core.Controls"
                    xmlns:models="clr-namespace:KProcess.Ksmed.Models;assembly=KProcess.Ksmed.Models"
                    xmlns:validations="clr-namespace:KProcess.Ksmed.Presentation.Core.Validations">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/KProcess.Ksmed.Presentation.Core;component/JetPack/Brushes.xaml" />
        <ResourceDictionary Source="/KProcess.Ksmed.Presentation.Core;component/JetPack/CoreStyles.xaml" />
        <ResourceDictionary Source="/KProcess.Ksmed.Presentation.Core;component/JetPack/SDKStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style BasedOn="{StaticResource listBoxStyleBase}" TargetType="{x:Type local:ReferentialPicker}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="IsEnabled" Value="{Binding IsNotReadOnly}" />
        <Setter Property="CreateReferentialCommand" Value="{Binding AddReferentialCommand}" />
        <Setter Property="SelectionMode" Value="Multiple" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <local:StarUniformColumnsGrid Width="{Binding ViewportWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollViewer}}}" ItemMinWidth="80" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="4,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ReferentialPicker}">
                    <Grid>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Margin="2,4,2,2"
                                       VerticalAlignment="Center"
                                       Text="{TemplateBinding Header}"
                                       TextWrapping="Wrap" />

                            <Grid Grid.Row="1">
                                <Border x:Name="OuterHighlight"
                                        Margin="0,0,-1,-1"
                                        BorderBrush="{StaticResource ControlOuterHighlightBrush}"
                                        BorderThickness="0,0,1,1"
                                        CornerRadius="3" />
                                <Border Margin="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="3">
                                    <ScrollViewer x:Name="ScrollViewer"
                                                  Margin="0"
                                                  Padding="0"
                                                  Background="Transparent"
                                                  BorderBrush="Transparent"
                                                  BorderThickness="0"
                                                  KeyboardNavigation.TabNavigation="{Binding (KeyboardNavigation.TabNavigation), RelativeSource={RelativeSource TemplatedParent}}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            Margin="0,0"
                                                            HorizontalAlignment="Left" />
                                            <local:ReferentialPickerItem x:Name="PART_NewReferential"
                                                                         Grid.Row="1"
                                                                         Width="{Binding ActualWidth, ElementName=ItemsPresenter}"
                                                                         HorizontalAlignment="Left"
                                                                         IsNewReferential="True" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                                <!--  Inner Shadow.  -->
                                <Border Margin="1"
                                        BorderBrush="{StaticResource InnerShadowDarkBrush}"
                                        BorderThickness="1,1,0,0"
                                        CornerRadius="2" />
                                <Border Margin="2,2,1,1"
                                        BorderBrush="{StaticResource InnerShadowLightBrush}"
                                        BorderThickness="1,1,0,0"
                                        CornerRadius="1" />
                            </Grid>
                        </Grid>
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ErrorBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Left"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Width="10"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Background="Transparent">
                                <Path Margin="-1,3,0,0"
                                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ErrorBrush}" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanCreate" Value="false">
                            <Setter TargetName="PART_NewReferential" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style BasedOn="{StaticResource listBoxItemStyleBase}" TargetType="{x:Type local:ReferentialPickerItem}">
        <Setter Property="MinHeight" Value="31" />
        <Setter Property="Referential" Value="{Binding .}" />
        <Setter Property="ToolTip" Value="{Binding DescriptionOrLabel}" />
        <Setter Property="IsEditable" Value="{Binding IsEditable, Mode=TwoWay}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        <Setter Property="Label" Value="{Binding Label, Mode=TwoWay}" />
        <Setter Property="Quantity" Value="{Binding Quantity, Mode=TwoWay}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ReferentialPickerItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle x:Name="MouseOverElement"
                                   Fill="{StaticResource MouseOverSelectionBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="0"
                                   RadiusY="0" />
                        <Rectangle x:Name="SelectedElement"
                                   Fill="{StaticResource InputSelectionBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="0"
                                   RadiusY="1" />

                        <Grid Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              TextElement.Foreground="{StaticResource NormalFontBrush}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_Quantity"
                                     MinHeight="0"
                                     Margin="0,0,4,0"
                                     Visibility="Collapsed">
                                <TextBox.Text>
                                    <k:InstantValidatingBinding Path="Quantity" RelativeSource="{RelativeSource TemplatedParent}">
                                        <k:InstantValidatingBinding.ValidationRules>
                                            <validations:StringToIntValidationRule ErrorMessageKey="Common_Context_BindingValidationFailed" />
                                        </k:InstantValidatingBinding.ValidationRules>
                                    </k:InstantValidatingBinding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock x:Name="PART_Label"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       Text="{Binding Label, RelativeSource={RelativeSource TemplatedParent}}"
                                       TextTrimming="CharacterEllipsis" />
                            <TextBox x:Name="PART_TextBox"
                                     Grid.Column="1"
                                     VerticalAlignment="Center"
                                     MaxLength="{x:Static models:ActionReferentialProperties.LabelMaxLength}"
                                     Text="{k:InstantBinding Label,
                                                             RelativeSource={RelativeSource TemplatedParent}}"
                                     Visibility="Collapsed" />
                        </Grid>

                        <Rectangle x:Name="FocusVisualElement"
                                   Margin="2"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Stroke="{StaticResource FocusVisualBrush}"
                                   StrokeDashArray="2"
                                   StrokeThickness="{StaticResource FocusVisualStrokeThickness}" />
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ErrorBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Left"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Width="10"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Background="Transparent">
                                <Path Margin="-1,3,0,0"
                                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ErrorBrush}" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="MouseOverElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FocusVisualElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded" />
                                <VisualState x:Name="BeforeLoaded" />
                                <VisualState x:Name="BeforeUnloaded" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="CanCreate" Value="false">
                            <Setter TargetName="PART_Quantity" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="IsStandard" Value="true">
                            <Setter TargetName="PART_Label" Property="FontWeight" Value="UltraBold" />
                            <Setter TargetName="PART_Label" Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsNewReferential" Value="true">
                <Setter Property="Referential" Value="{x:Null}" />
                <Setter Property="ToolTip" Value="{x:Null}" />
                <Setter Property="IsEditable" Value="false" />
                <Setter Property="IsSelected" Value="False" />
                <Setter Property="Quantity" Value="1" />

                <Setter Property="Label" Value="{k:Localize View_AnalyzeAcquire_NewReferential}" />
                <Setter Property="Block.FontStyle" Value="Italic" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>