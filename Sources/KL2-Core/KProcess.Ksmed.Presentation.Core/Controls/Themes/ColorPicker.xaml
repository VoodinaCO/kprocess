<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:k="http://schemas.kprocess.com/xaml/framework"
  xmlns:local="clr-namespace:KProcess.Ksmed.Presentation.Core.Controls"
  xmlns:converters="clr-namespace:KProcess.Ksmed.Presentation.Core.Converters"
  xmlns:chrome="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
  >
    <SolidColorBrush x:Key="ButtonHover" Color="#C2E0FF"/>
    <SolidColorBrush x:Key="ButtonHoverBorder" Color="#3399FF"/>
    <SolidColorBrush x:Key="ButtonChecked" Color="#E6F0FA"/>
    <SolidColorBrush x:Key="ButtonPressed" Color="#99CCFF"/>
    <SolidColorBrush x:Key="ButtonPressedBorder" Color="#3399FF"/>

    <!-- =============================================================================== -->
    <!-- ColorPicker                                                                     -->
    <!-- =============================================================================== -->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <k:NegatedBooleanConverter x:Key="InverseBoolConverter" />
    <converters:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter" />

    <LinearGradientBrush x:Key="ColorPickerDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0"/>
        <GradientStop Color="#FF8399A9" Offset="0.375"/>
        <GradientStop Color="#FF718597" Offset="0.375"/>
        <GradientStop Color="#FF617584" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff"/>
                <GradientStop Offset="1" Color="#FFE8EBED"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <DrawingBrush  x:Key="CheckerBrush" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50" />
                            <RectangleGeometry Rect="50,50 50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="ColorPaletteLisBoxStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ToolTip" Value="{Binding Name}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid ToolTip="{Binding Name}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border BorderThickness="2" Background="Transparent" BorderBrush="Transparent" CornerRadius="3" x:Name="_outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent" BorderThickness="1" BorderBrush="Transparent" x:Name="_innerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFEEEEEE" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFDD0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ColorItemTemplate">
        <Grid>
            <Border BorderBrush="#FFC9CACA" BorderThickness="1" Margin="2,2,2,2" >
                <Rectangle Width="14" Height="14">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="Fill" Value="{Binding ., Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="ColorDisplayStyle" TargetType="Border">
        <Setter Property="Background" Value="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" Value="Transparent">
                <Setter Property="Background" Value="{StaticResource CheckerBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:ColorPicker}">
        <Setter Property="BorderBrush" Value="{StaticResource ColorPickerDarkBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ButtonStyle" Value="{DynamicResource ComboBoxButton}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorPicker}">
                    <Grid>
                        <ToggleButton 
              x:Name="PART_ColorPickerToggleButton" IsTabStop="True" MinHeight="22" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
              IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
              Style="{TemplateBinding ButtonStyle}"
              VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Padding="3">
                            <Grid>
                                <Border x:Name="ColorOnly" Style="{StaticResource ColorDisplayStyle}" Margin="0,0,20,0" />

                                <Path x:Name="BtnArrow" Width="8" Height="4" Margin="0,0,6,0" Data="M0,0 L1,0 0.5,1Z" 
                        Fill="#606060" Stretch="Fill" HorizontalAlignment="Right" />
                            </Grid>
                        </ToggleButton>

                        <Popup x:Name="PART_ColorPickerPalettePopup"  VerticalAlignment="Bottom" IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}" StaysOpen="False" AllowsTransparency="True" Focusable="False"  HorizontalOffset="1" VerticalOffset="1"  >
                            <Border BorderThickness="1" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource ColorPickerDarkBorderBrush}" Padding="3">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Grid x:Name="_gridStandardColorsHost" Margin="4">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!-- Available Colors -->
                                        <Grid Grid.Row="0" Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <ListBox x:Name="PART_AvailableColors" Background="Transparent" BorderThickness="0" SelectionMode="Single"
                                                         ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}"                                                      
                                                         ItemTemplate="{StaticResource ColorItemTemplate}"
                                                         ItemContainerStyle="{StaticResource ColorPaletteLisBoxStyle}"
                                                         Style="{x:Null}">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Width="180" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </Grid>

                                        <!-- Standard Colors-->
                                        <Grid Grid.Row="1" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <ListBox x:Name="PART_StandardColors" SelectionMode="Single" Background="Transparent" BorderThickness="0"
                                                         ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}"                                                      
                                                         ItemTemplate="{StaticResource ColorItemTemplate}"
                                                         ItemContainerStyle="{StaticResource ColorPaletteLisBoxStyle}"
                                                         Style="{x:Null}">
                                                         <!--SelectedItem="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"-->
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Width="180" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                            </ListBox>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
