<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:KProcess.Ksmed.Presentation.Core.Controls"
  xmlns:k="http://schemas.kprocess.com/xaml/framework"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:behaviors="clr-namespace:KProcess.Ksmed.Presentation.Core.Behaviors"
  xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
  xmlns:System="clr-namespace:System;assembly=mscorlib"
  xmlns:converters="clr-namespace:KProcess.Ksmed.Presentation.Core.Converters"
  xmlns:models="clr-namespace:KProcess.Ksmed.Models;assembly=KProcess.Ksmed.Models"
  >

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/KProcess.Ksmed.Presentation.Core;component/JetPack/Brushes.xaml" />
    <ResourceDictionary Source="/KProcess.Ksmed.Presentation.Core;component/JetPack/CoreStyles.xaml" />
    <ResourceDictionary Source="/KProcess.Ksmed.Presentation.Core;component/JetPack/SDKStyles.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style TargetType="{x:Type local:DropDownButton}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="10,4,29,4" />
    <Setter Property="Foreground" Value="{StaticResource ControlForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:DropDownButton}">
          <Grid x:Name="MainGrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightLine" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="ShadowLine" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="FocusedDropDown" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border x:Name="ContentPresenterBorder">
              <Grid>
                <ToggleButton x:Name="PART_DropDownButton" Style="{StaticResource ComboBoxButton}" HorizontalAlignment="Stretch" 
                              IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                              Margin="0" VerticalAlignment="Stretch" HorizontalContentAlignment="Right" Padding="3" ClickMode="Press">
                  <Path x:Name="BtnArrow" Width="8" Height="4" HorizontalAlignment="Right" Margin="0,0,6,0" Data="M0,0 L1,0 0.5,1Z" 
                        Fill="#606060" Stretch="Fill" />
                </ToggleButton>
                <Rectangle x:Name="HighlightLine" Width="1" HorizontalAlignment="Right" Margin="0,2,26,2">
                  <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                      <GradientStop Color="#0FFF" Offset="0" />
                      <GradientStop Color="#FFFF" Offset="0.3" />
                      <GradientStop Color="#AFFF" Offset="0.7" />
                      <GradientStop Color="#0FFF" Offset="1" />
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                </Rectangle>
                <Rectangle x:Name="ShadowLine" Width="1" HorizontalAlignment="Right" Margin="0,2,27,2">
                  <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                      <GradientStop Color="#0000" Offset="0" />
                      <GradientStop Color="#3000" Offset="0.3" />
                      <GradientStop Color="#3000" Offset="0.7" />
                      <GradientStop Color="#0000" Offset="1" />
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                </Rectangle>

                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" 
                  Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <ContentPresenter.Effect>
                    <DropShadowEffect Color="{StaticResource ColorForegroundShadowColor}" Direction="-90" BlurRadius="1" ShadowDepth="1" Opacity="0.5" />
                  </ContentPresenter.Effect>
                </ContentPresenter>
              </Grid>
            </Border>

            <Popup x:Name="PART_Popup" AllowsTransparency="true" 
                   IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}" 
                   Margin="0,1,0,0" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">

              <Border x:Name="PopupBorder" Height="Auto" HorizontalAlignment="Stretch" 
                      Background="#606066" CornerRadius="0,0,4,4" 
                      MinWidth="{Binding ActualWidth, ElementName=MainGrid}">

                <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}" />

                <!--<ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Padding="0" Margin="0,0,0,4">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                      <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=PopupBorder}"
                                Height="{Binding ActualHeight, ElementName=PopupBorder}" 
                                Width="{Binding ActualWidth, ElementName=PopupBorder}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                  </Grid>
                </ScrollViewer>-->
              </Border>

            </Popup>
          </Grid>
          <!--<Grid x:Name="MainGrid" SnapsToDevicePixels="True">
            <ToggleButton x:Name="PART_DropDownButton"
                                Grid.Column="1"
                                IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}">
              <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                  <ContentPresenter />
                </ControlTemplate>
              </ToggleButton.Template>
              <Grid>
                <chrome:ButtonChrome x:Name="ToggleButtonChrome"
                                                     RenderChecked="{TemplateBinding IsOpen}"
                                                     RenderEnabled="{TemplateBinding IsEnabled}"
											         RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}"
											         RenderPressed="{Binding IsPressed, ElementName=PART_DropDownButton}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="true" />
                    <Grid x:Name="arrowGlyph" IsHitTestVisible="False" Margin="4,3,4,3" Grid.Column="1">
                      <Path x:Name="Arrow"  Width="7" Height="4" Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </Grid>
                  </Grid>
                </chrome:ButtonChrome>
              </Grid>
            </ToggleButton>

            <Popup x:Name="PART_Popup" 
                         HorizontalOffset="1"
                         VerticalOffset="1"
                         AllowsTransparency="True"
                         StaysOpen="False"
                         Placement="Bottom"
                         Focusable="False"
                         IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}">
              <Border BorderThickness="1" Background="{StaticResource PanelBackgroundBrush}" BorderBrush="{StaticResource PopupDarkBorderBrush}">
                <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}" />
              </Border>
            </Popup>

          </Grid>-->
          <ControlTemplate.Triggers>
            <!--<Trigger Property="IsEnabled" Value="False">
              <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
              <Setter TargetName="ToggleButtonChrome" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>