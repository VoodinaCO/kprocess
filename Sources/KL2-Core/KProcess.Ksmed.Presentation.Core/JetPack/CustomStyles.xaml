<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:k="http://schemas.kprocess.com/xaml/framework"
                    xmlns:local="clr-namespace:KProcess.Ksmed.Presentation.Core.Controls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <!--  Global Settings.  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/KProcess.Ksmed.Presentation.Core;component/JetPack/Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/KProcess.Ksmed.Presentation.Core;component/JetPack/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/KProcess.Ksmed.Presentation.Core;component/JetPack/CoreStyles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/KProcess.Ksmed.Presentation.Core;component/JetPack/SDKStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--
        BOUTONS
    -->

    <Style x:Key="ButtonImageStyleBase"
           BasedOn="{StaticResource OpacityButton2}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="4" />
        <Setter Property="Background" Value="#33FFFFFF" />
    </Style>

    <Style x:Key="ButtonLeftStyleBase"
           BasedOn="{StaticResource ButtonImageStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="0,8,8,8" />
    </Style>

    <Style x:Key="ButtonFillSmallStyle"
           BasedOn="{StaticResource baseButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="ToggleButtonFillSmallStyle"
           BasedOn="{StaticResource toggleButtonBaseStyle}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="ButtonSyncStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Command" Value="{Binding SyncCommand}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="ToolTip" Value="{k:Localize View_MainWindow_Synchronize}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/sync.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonLeftOpenStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Command" Value="{Binding OpenCommand}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/folder32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftAddFileStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Command" Value="{Binding AddCommand}" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="ToolTipService.ToolTip" Value="{k:Localize View_PrepareProject_Create, Shortcut=Add}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/paperplus32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding DataContext.CanAddProject, RelativeSource={RelativeSource Self}, FallbackValue=False}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTipService.ToolTip" Value="{k:Localize View_PrepareProject_CantCreateProject}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding DataContext.CanAddProject, RelativeSource={RelativeSource Self}, FallbackValue=False}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTipService.ToolTip" Value="{k:Localize View_PrepareProject_OnlyOwnerCanCreateProject}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonLeftAddProcessStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Command" Value="{Binding AddProcessCommand}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/addprocess32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftAddFolderStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Command" Value="{Binding AddFolderCommand}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/addFolder.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftAddFileStandardStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Command" Value="{Binding AddCommand}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/paperplus32-pin-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftRemoveFileStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Command" Value="{Binding RemoveCommand}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/paperminus32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftExportProjectStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/exportproject32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftImportProjectStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/importproject32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftExportVideoStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/exportvideo32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftImportVideoStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/importvideo32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftExportExcelStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/boxupload32-green-XL-ssvo.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftMergeStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{k:Localize Core_Buttons_Merge}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/merge32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonTopBackStyle"
           BasedOn="{StaticResource ButtonImageStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="Command" Value="{Binding BackCommand}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/arrowleft32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftConvertScenarioToNewProjectStyle"
           BasedOn="{StaticResource ButtonLeftStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="32"
                           Height="32"
                           Source="pack://siteoforigin:,,,/Resources/Images/convertScenarioToNewProject32-green.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/arrowleft32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonRightSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/arrowright32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonUpSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/arrowup32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDownSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="1,1,0,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/arrowdown32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonPlusSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="1,1,0,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/plus32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMinusSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/minus32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStopSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/stop32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFolderMinusSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="1,1,0,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/folderminus32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFolderPlusSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="1,1,0,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/folderplus32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonDuplicateTaskStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="1,1,0,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/duplicate-document.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonUploadPlus90SmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="1,1,0,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/uploadplus9032.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonUploadMinus90SmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/uploadminus9032.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonChangeVideo90SmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="1,1,0,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <GeometryDrawing Brush="#FF444444" Geometry="F1 M 888.616,555.303L 888.616,562.22L 878.933,562.22L 878.933,555.303L 870.632,555.303L 870.632,558.07L 806.996,558.07L 806.996,555.303L 798.695,555.303L 798.695,562.22L 789.012,562.22L 789.012,555.303L 782.095,555.303L 782.095,667.358L 789.012,667.358L 789.012,660.441L 798.695,660.441L 798.695,667.358L 806.996,667.358L 806.996,664.591L 870.632,664.591L 870.632,667.358L 878.933,667.358L 878.933,660.441L 888.616,660.441L 888.616,667.358L 896.917,667.358L 896.917,555.303L 888.616,555.303 Z M 798.695,653.524L 789.012,653.524L 789.012,642.457L 798.695,642.457L 798.695,653.524 Z M 798.695,635.54L 789.012,635.54L 789.012,624.473L 798.695,624.473L 798.695,635.54 Z M 798.695,616.172L 789.012,616.172L 789.012,605.105L 798.695,605.105L 798.695,616.172 Z M 798.695,598.188L 789.012,598.188L 789.012,587.121L 798.695,587.121L 798.695,598.188 Z M 798.695,580.204L 789.012,580.204L 789.012,569.137L 798.695,569.137L 798.695,580.204 Z M 870.632,660.441L 806.996,660.441L 806.996,613.406L 870.632,613.406L 870.632,660.441 Z M 870.632,609.255L 806.996,609.255L 806.996,562.22L 870.632,562.22L 870.632,609.255 Z M 888.616,653.524L 878.933,653.524L 878.933,642.457L 888.616,642.457L 888.616,653.524 Z M 888.616,635.54L 878.933,635.54L 878.933,624.473L 888.616,624.473L 888.616,635.54 Z M 888.616,616.172L 878.933,616.172L 878.933,605.105L 888.616,605.105L 888.616,616.172 Z M 888.616,598.188L 878.933,598.188L 878.933,587.121L 888.616,587.121L 888.616,598.188 Z M 888.616,580.204L 878.933,580.204L 878.933,569.137L 888.616,569.137L 888.616,580.204 Z " />
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonAutoScaleHorizontalSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/appbar.arrow.leftright.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonAutoScaleVerticalSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/appbar.arrow.updown.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonAutoScaleVerticalRevertSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/appbar.arrow.updown.revert.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonAutoScaleBothSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/appbar.arrow.all.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonLinksSmallStyle"
           BasedOn="{StaticResource ToggleButtonFillSmallStyle}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/appbar.diagram.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCheckSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/check32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLeftTurnArrowSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/leftturnarrow32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonPlusPlusSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/plusplus32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonPlusProcessSmallStyle"
           BasedOn="{StaticResource ButtonFillSmallStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16"
                           Height="16"
                           Source="pack://siteoforigin:,,,/Resources/Images/plusprocess32.png" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        SPINNER
    -->

    <Style x:Key="spinnerStyle" TargetType="{x:Type Control}">
        <Setter Property="Foreground" Value="{DynamicResource ColorAccentBrush}" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Canvas x:Name="PART_Root">
                        <Canvas.Resources>
                            <Storyboard x:Key="spinnerSB"
                                        BeginTime="00:00:00"
                                        RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle01"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle12"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle11"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.9000000" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.1000000" Value="0.5" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle02"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle03"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle04"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle05"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.7000000" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle06"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.7000000" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle07"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.7000000" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.9000000" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle08"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.7000000" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.9000000" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle09"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.7000000" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.8000000" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.9000000" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0.25" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.1000000" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="Rectangle10"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.8000000" Value="0.2" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:00.9000000" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0.5" />
                                    <EasingDoubleKeyFrame KeyTime="00:00:01.1000000" Value="0.25" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Canvas.Resources>
                        <Canvas.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard x:Name="spinnerSB" Storyboard="{StaticResource spinnerSB}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                                <StopStoryboard BeginStoryboardName="spinnerSB" />
                            </EventTrigger>
                        </Canvas.Triggers>
                        <Rectangle x:Name="Rectangle01"
                                   Canvas.Left="11"
                                   Canvas.Top="2"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1" />
                        <Rectangle x:Name="Rectangle02"
                                   Canvas.Left="11"
                                   Canvas.Top="2"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="30" />
                                    <TranslateTransform X="3.7499999999999996" Y="1.00480947161671" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle03"
                                   Canvas.Left="11"
                                   Canvas.Top="2"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5"
                                   UseLayoutRounding="False">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="60" />
                                    <TranslateTransform X="6.49519052838329" Y="3.7500000271702154" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle04"
                                   Canvas.Left="11"
                                   Canvas.Top="2"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5"
                                   UseLayoutRounding="False">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform X="7.5000000920390741" Y="7.5" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle05"
                                   Canvas.Left="11"
                                   Canvas.Top="2"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5"
                                   UseLayoutRounding="False">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="120" />
                                    <TranslateTransform X="6.49519052838329" Y="11.25" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle06"
                                   Canvas.Left="11"
                                   Canvas.Top="2"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5"
                                   UseLayoutRounding="False">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="150" />
                                    <TranslateTransform X="3.7500000920390728" Y="13.995190528383292" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle07"
                                   Canvas.Left="11"
                                   Canvas.Top="17"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1" />
                        <Rectangle x:Name="Rectangle08"
                                   Canvas.Left="11"
                                   Canvas.Top="17"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="30" />
                                    <TranslateTransform X="-3.7499999999999996" Y="-1.00480947161671" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle09"
                                   Canvas.Left="11"
                                   Canvas.Top="17"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5"
                                   UseLayoutRounding="False">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="60" />
                                    <TranslateTransform X="-6.49519052838329" Y="-3.7500000271702154" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle10"
                                   Canvas.Left="11"
                                   Canvas.Top="17"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5"
                                   UseLayoutRounding="False">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform X="-7.5000000920390741" Y="-7.5" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle11"
                                   Canvas.Left="11"
                                   Canvas.Top="17"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5"
                                   UseLayoutRounding="False">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="120" />
                                    <TranslateTransform X="-6.49519052838329" Y="-11.25" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="Rectangle12"
                                   Canvas.Left="11"
                                   Canvas.Top="17"
                                   Width="2"
                                   Height="5"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="1"
                                   RadiusY="1"
                                   RenderTransformOrigin="0.5,0.5"
                                   UseLayoutRounding="False">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="150" />
                                    <TranslateTransform X="-3.7500000920390728" Y="-13.995190528383292" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="spinnerDataTemplate">
        <Border x:Name="border"
                Background="#10000000"
                Opacity="0.01">
            <i:Interaction.Triggers>
                <i:EventTrigger>
                    <ei:GoToStateAction StateName="Normal" />
                </i:EventTrigger>
                <i:EventTrigger EventName="Unloaded">
                    <ei:GoToStateAction StateName="Hidden" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid>
                <StackPanel Margin="0,40,20,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Orientation="Horizontal">
                    <Control Style="{StaticResource spinnerStyle}" />
                    <TextBlock Margin="4"
                               HorizontalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalContentAligment}"
                               VerticalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalContentAligment}"
                               Style="{DynamicResource Heading6}"
                               Text="{Binding .}">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="3"
                                              Direction="-90"
                                              Opacity="1"
                                              ShadowDepth="1"
                                              Color="#000000" />
                        </TextBlock.Effect>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="VisibilityStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Hidden" />
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </DataTemplate>

    <!--
        Notification Bar
    -->

    <Style TargetType="{x:Type local:NotificationBar}">
        <Setter Property="BorderBrush" Value="{StaticResource DarkBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource StaticControlBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NotificationBar}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NotificationBarItemBaseStyle" TargetType="{x:Type local:NotificationBarItem}">
        <Setter Property="BorderBrush" Value="{StaticResource DarkBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource StaticControlBackground}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="10,2" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Foreground" Value="{DynamicResource ControlForeground}" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NotificationBarItem}">
                    <Grid x:Name="Root">

                        <ToggleButton x:Name="PART_ToggleButton"
                                      Padding="{TemplateBinding Padding}"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Content="{TemplateBinding Header}"
                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid>
                                        <Border x:Name="DisabledElement"
                                                Background="{StaticResource DisabledBrush}"
                                                CornerRadius="2"
                                                Opacity="0">
                                            <Border BorderBrush="{StaticResource DisabledBorderBrush}"
                                                    BorderThickness="0,0,1,1"
                                                    CornerRadius="2" />
                                        </Border>
                                        <Border x:Name="NormalElement"
                                                Background="{StaticResource ControlBackgroundNormal}"
                                                CornerRadius="2"
                                                Effect="{StaticResource ControlShadowEffect}" />
                                        <Border x:Name="CheckedElement"
                                                Margin="0,-1,0,-1"
                                                Background="#FFC9C9C9"
                                                BorderBrush="#D0494a4d"
                                                BorderThickness="1"
                                                CornerRadius="2.5"
                                                Opacity="0">
                                            <Border BorderBrush="#70303030"
                                                    BorderThickness="1,1,0,0"
                                                    CornerRadius="2">
                                                <Border BorderBrush="#30303030"
                                                        BorderThickness="1"
                                                        CornerRadius="1.5">
                                                    <Border BorderBrush="#10303030"
                                                            BorderThickness="1,1,0,0"
                                                            CornerRadius="1" />
                                                </Border>
                                            </Border>
                                        </Border>
                                        <Border x:Name="MouseOverElement"
                                                Background="{StaticResource ControlBackgroundOver}"
                                                CornerRadius="2"
                                                Opacity="0" />
                                        <Border x:Name="HighlightElement"
                                                BorderBrush="{StaticResource ControlHighlight}"
                                                BorderThickness="1,1,0,0"
                                                CornerRadius="2" />
                                        <ContentPresenter x:Name="ContentHost"
                                                          Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          d:IsEffectDisabled="True">
                                            <ContentPresenter.Effect>
                                                <DropShadowEffect BlurRadius="1"
                                                                  Direction="-90"
                                                                  Opacity="0.5"
                                                                  ShadowDepth="1"
                                                                  Color="{StaticResource ColorForegroundShadowColor}" />
                                            </ContentPresenter.Effect>
                                        </ContentPresenter>
                                        <Rectangle x:Name="FocusVisualElement"
                                                   Margin="1"
                                                   d:IsHidden="True"
                                                   IsHitTestVisible="False"
                                                   Opacity="0"
                                                   RadiusX="1"
                                                   RadiusY="1"
                                                   Stroke="{StaticResource FocusVisualBrush}"
                                                   StrokeDashArray="2"
                                                   StrokeThickness="{StaticResource FocusVisualStrokeThickness}" />
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                                    <VisualTransition To="Pressed" />
                                                    <VisualTransition From="Pressed" />
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="MouseOverElement"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         To="1"
                                                                         Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="NormalElement"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         To="0"
                                                                         Duration="0" />
                                                        <DoubleAnimation Storyboard.TargetName="DisabledElement"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         To="1"
                                                                         Duration="0" />
                                                        <DoubleAnimation Storyboard.TargetName="HighlightElement"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         To="0.5"
                                                                         Duration="0" />
                                                        <DoubleAnimation Storyboard.TargetName="ContentHost"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         To="0.75"
                                                                         Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="NormalElement"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         To="0"
                                                                         Duration="0" />
                                                        <DoubleAnimation Storyboard.TargetName="HighlightElement"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         To="0"
                                                                         Duration="0" />
                                                        <DoubleAnimation Storyboard.TargetName="CheckedElement"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         To="1"
                                                                         Duration="0" />
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="CheckedElement" Storyboard.TargetProperty="(Border.BorderThickness)">
                                                            <EasingThicknessKeyFrame KeyTime="0" Value="1,0,1,1" />
                                                        </ThicknessAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unchecked" />
                                                <VisualState x:Name="Indeterminate" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="FocusVisualElement"
                                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                         To="1"
                                                                         Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=Root}"
                               StaysOpen="False">
                            <Border MinWidth="200"
                                    MinHeight="100"
                                    Background="#FFC9C9C9"
                                    BorderBrush="{DynamicResource ControlBorderBrush}"
                                    BorderThickness="1,1,1,0"
                                    CornerRadius="2">
                                <ContentPresenter Margin="8" />
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource NotificationBarItemBaseStyle}" TargetType="{x:Type local:NotificationBarItem}" />

    <Style x:Key="ReferentialValidationListBoxItemStyle"
           BasedOn="{StaticResource listBoxItemStyleBase}"
           TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsValidatedAndIsNotValid}" Value="true">
                <Setter Property="Background" Value="{StaticResource ErrorLightBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource baseComboBoxStyle}" TargetType="{x:Type local:ComboBoxF4Disabled}" />

</ResourceDictionary>