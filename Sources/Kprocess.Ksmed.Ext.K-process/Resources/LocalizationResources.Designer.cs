//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KProcess.Ksmed.Ext.Kprocess.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LocalizationResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizationResources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KProcess.Ksmed.Ext.Kprocess.Resources.LocalizationResources", typeof(LocalizationResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Centralized storage.
        /// </summary>
        internal static string ExtKp_ConfigurationView_ArchivageLabel {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_ArchivageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose this mode to manage a centralized versioning and storage.
        ///- Links between reporting file (XLSM) and video clips or task representative pictures are absolute/full.
        ///- At each export, a version number is applied to the reporting file (XLSM) and to a subfolder containing the video clips and task representative pictures..
        /// </summary>
        internal static string ExtKp_ConfigurationView_ArchivageTooltip {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_ArchivageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Path to reporting export folder.
        /// </summary>
        internal static string ExtKp_ConfigurationView_DefaultExportDirectory {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_DefaultExportDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Path to video and thumbnail folder (NOTA : if empty the folder will be named &quot;ProjectName\Version\Videos(Thumbnails)&quot; and included in the reporting file folder).
        /// </summary>
        internal static string ExtKp_ConfigurationView_DefaultExportVideoDirectory {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_DefaultExportVideoDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Read only optional (if checked the user will be able to open the reporting file in a Read Only mode).
        /// </summary>
        internal static string ExtKp_ConfigurationView_EnableReadOnly {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_EnableReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Activate reporting export.
        /// </summary>
        internal static string ExtKp_ConfigurationView_ExcelExportIsEnabled {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_ExcelExportIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add reporting file name in the watermark.
        /// </summary>
        internal static string ExtKp_ConfigurationView_ExcelFileNameMarkingIsEnabled {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_ExcelFileNameMarkingIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reporting Export.
        /// </summary>
        internal static string ExtKp_ConfigurationView_ExportExcel {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_ExportExcel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Path to Template file (.xltm).
        /// </summary>
        internal static string ExtKp_ConfigurationView_ExportExcelModelPath {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_ExportExcelModelPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Task group color.
        /// </summary>
        internal static string ExtKp_ConfigurationView_GanttGroupColor {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_GanttGroupColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gantt (if activated in Template file).
        /// </summary>
        internal static string ExtKp_ConfigurationView_GantTitle {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_GantTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Color of tasks without Category.
        /// </summary>
        internal static string ExtKp_ConfigurationView_GanttNoCategoryColor {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_GanttNoCategoryColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Horizontal alignment.
        /// </summary>
        internal static string ExtKp_ConfigurationView_HorizontalAlignement {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_HorizontalAlignement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key tasks color.
        /// </summary>
        internal static string ExtKp_ConfigurationView_ImportantTaskColor {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_ImportantTaskColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Referentials in task detail part.
        /// </summary>
        internal static string ExtKp_ConfigurationView_MaxNumberActionRefImagePerCell {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_MaxNumberActionRefImagePerCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Referentials in the front page.
        /// </summary>
        internal static string ExtKp_ConfigurationView_MaxNumberScenarioRefImagesPerCell {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_MaxNumberScenarioRefImagesPerCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Formatting.
        /// </summary>
        internal static string ExtKp_ConfigurationView_MEFTitle {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_MEFTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use multithreading (requires a big processor capacity).
        /// </summary>
        internal static string ExtKp_ConfigurationView_Multithreading {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_Multithreading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export only videos of key tasks.
        /// </summary>
        internal static string ExtKp_ConfigurationView_OnlyVideosOfKeyTasks {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_OnlyVideosOfKeyTasks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Watermark.
        /// </summary>
        internal static string ExtKp_ConfigurationView_OverlayTextVideo {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_OverlayTextVideo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redistributable package.
        /// </summary>
        internal static string ExtKp_ConfigurationView_RedistribuableLabel {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_RedistribuableLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose this mode to create a turnkey redistributable package including video clips and task representative pictures.
        ///- Links between reporting file (XLSM) and video clips or task representative pictures are relative.
        ///- At each export, a version number is applied to the reporting file (XLSM) and to the package folder..
        /// </summary>
        internal static string ExtKp_ConfigurationView_RedistribuableTooltip {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_RedistribuableTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Task title size.
        /// </summary>
        internal static string ExtKp_ConfigurationView_TaskTitleSize {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_TaskTitleSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vertical alignement.
        /// </summary>
        internal static string ExtKp_ConfigurationView_VerticalAlignement {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_VerticalAlignement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Videos and Thumbnails options.
        /// </summary>
        internal static string ExtKp_ConfigurationView_VideoEncodingTitle {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_VideoEncodingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Activate video export.
        /// </summary>
        internal static string ExtKp_ConfigurationView_VideoExportIsEnabled {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_VideoExportIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Watermarking.
        /// </summary>
        internal static string ExtKp_ConfigurationView_VideoMarkingEnable {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_VideoMarkingEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add the ID of the task in the watermark.
        /// </summary>
        internal static string ExtKp_ConfigurationView_WBSMarkingIsEnabled {
            get {
                return ResourceManager.GetString("ExtKp_ConfigurationView_WBSMarkingIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Creating video files {0}/{1}.
        /// </summary>
        internal static string ExtKp_Dlg_CreatingVideoFiles {
            get {
                return ResourceManager.GetString("ExtKp_Dlg_CreatingVideoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Do you want to launch the export ?.
        /// </summary>
        internal static string ExtKp_Dlg_DoYouWantToLaunchExport {
            get {
                return ResourceManager.GetString("ExtKp_Dlg_DoYouWantToLaunchExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The export has been canceled.
        /// </summary>
        internal static string ExtKp_Dlg_ExportCanceled {
            get {
                return ResourceManager.GetString("ExtKp_Dlg_ExportCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export lauching.
        /// </summary>
        internal static string ExtKp_Dlg_LaunchExport {
            get {
                return ResourceManager.GetString("ExtKp_Dlg_LaunchExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select at least one export in the SmartExport control panel..
        /// </summary>
        internal static string ExtKp_Dlg_No_Export_Selected {
            get {
                return ResourceManager.GetString("ExtKp_Dlg_No_Export_Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select at least one export mode in the SmartExport control panel..
        /// </summary>
        internal static string ExtKp_Dlg_No_Mode_Selected {
            get {
                return ResourceManager.GetString("ExtKp_Dlg_No_Mode_Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export completed with errors. Check the report errors tab in the folder {0}.
        /// </summary>
        internal static string ExtKp_Dlg_PackageExportedWithErrors {
            get {
                return ResourceManager.GetString("ExtKp_Dlg_PackageExportedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Export complete. You can find the result in the folder {0}.
        /// </summary>
        internal static string ExtKp_Dlg_PackageExportedWithSuccess {
            get {
                return ResourceManager.GetString("ExtKp_Dlg_PackageExportedWithSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the previous version (Cancel = Creation).
        /// </summary>
        internal static string ExtKp_Dlg_SelectPreviousVersionFile {
            get {
                return ResourceManager.GetString("ExtKp_Dlg_SelectPreviousVersionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error with the path to the Excel template (.xlsm). Please check the SmartExport settings: {0}..
        /// </summary>
        internal static string ExtKp_Error_ExcelModelPath {
            get {
                return ResourceManager.GetString("ExtKp_Error_ExcelModelPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The path to the model is not specified.
        /// </summary>
        internal static string ExtKp_Error_MustConfigure {
            get {
                return ResourceManager.GetString("ExtKp_Error_MustConfigure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The project name cannot be empty.
        /// </summary>
        internal static string ExtKp_Error_MustContainDash {
            get {
                return ResourceManager.GetString("ExtKp_Error_MustContainDash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Undefined.
        /// </summary>
        internal static string ExtKp_Error_Undefined {
            get {
                return ResourceManager.GetString("ExtKp_Error_Undefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Publish the selected scenario. It is recommended to close Excel first..
        /// </summary>
        internal static string ExtKp_Export_Label {
            get {
                return ResourceManager.GetString("ExtKp_Export_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Creating reporting file.
        /// </summary>
        internal static string ExtKp_ExportWindow_CreatingExcelFile {
            get {
                return ResourceManager.GetString("ExtKp_ExportWindow_CreatingExcelFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Exporting....
        /// </summary>
        internal static string ExtKp_ExportWindow_Exporting {
            get {
                return ResourceManager.GetString("ExtKp_ExportWindow_Exporting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stop.
        /// </summary>
        internal static string ExtKp_ExportWindow_Stop {
            get {
                return ResourceManager.GetString("ExtKp_ExportWindow_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Smart Export.
        /// </summary>
        internal static string ExtKp_Label {
            get {
                return ResourceManager.GetString("ExtKp_Label", resourceCulture);
            }
        }
    }
}
